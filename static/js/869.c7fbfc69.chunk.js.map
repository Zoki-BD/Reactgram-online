{"version":3,"file":"static/js/869.c7fbfc69.chunk.js","mappings":"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","sources":["components/header.js","constants/paths.js","hooks/use-user.js","context/logged-in-user.js","components/post/header.js","components/post/image.js","components/post/actions.js","components/post/footer.js","components/post/add-comment.js","components/post/comments.js","components/post/index.js","components/timeline.js","hooks/use-photos.js","components/sidebar/user.js","components/sidebar/suggested-profile.js","components/sidebar/suggestions.js","components/sidebar/index.js","pages/dashboard.js","services/firebase.js"],"sourcesContent":["import { useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport FirebaseContext from '../context/firebase';\nimport UserContext from '../context/user';\nimport * as ROUTES from '../constants/routes';\nimport { DEFAULT_IMAGE_PATH } from '../constants/paths';\nimport useUser from '../hooks/use-user';\n\nexport default function Header() {\n   const { user: loggedInUser } = useContext(UserContext);\n   const { user } = useUser(loggedInUser?.uid);\n   const { firebase } = useContext(FirebaseContext);\n   const history = useHistory();\n\n   //console.log({ user })\n\n   return (\n      <header className=\"h-16 bg-white border-b border-gray-primary mb-8\">\n         <div className=\"container mx-auto max-w-screen-lg h-full\">\n            <div className=\"flex justify-between h-full\">\n               <div className=\"text-gray-700 text-center flex items-center align-items cursor-pointer\">\n                  <h1 className=\"flex justify-center w-full\">\n                     <Link to={ROUTES.DASHBOARD} aria-label=\"Instagram logo\">\n                        <img src=\"/images/logo.png\" alt=\"Instagram\" className=\"mt-2 w-6/12\" />\n                     </Link>\n                  </h1>\n               </div>\n               <div className=\"text-gray-700 text-center flex items-center align-items\">\n                  {loggedInUser ? (\n                     <>\n                        <Link to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\n                           <svg\n                              className=\"w-8 mr-6 text-black-light cursor-pointer\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              fill=\"none\"\n                              viewBox=\"0 0 24 24\"\n                              stroke=\"currentColor\"\n                           >\n                              <path\n                                 strokeLinecap=\"round\"\n                                 strokeLinejoin=\"round\"\n                                 strokeWidth={2}\n                                 d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n                              />\n                           </svg>\n                        </Link>\n\n                        <button\n                           type=\"button\"\n                           title=\"Sign Out\"\n                           onClick={() => {\n                              firebase.auth().signOut();\n                              history.push(ROUTES.LOGIN);\n                           }}\n                           //Sign out with enter key\n                           onKeyDown={(event) => {\n                              if (event.key === 'Enter') {\n                                 firebase.auth().signOut();\n                                 history.push(ROUTES.LOGIN);\n                              }\n                           }}\n                        >\n                           <svg\n                              className=\"w-8 mr-6 text-black-light cursor-pointer\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              fill=\"none\"\n                              viewBox=\"0 0 24 24\"\n                              stroke=\"currentColor\"\n                           >\n                              <path\n                                 strokeLinecap=\"round\"\n                                 strokeLinejoin=\"round\"\n                                 strokeWidth={2}\n                                 d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                              />\n                           </svg>\n                        </button>\n                        {user && (\n                           <div className=\"flex items-center cursor-pointer\">\n                              <Link to={`/p/${user?.username}`}>\n                                 <img\n                                    className=\"rounded-full h-8 w-8 flex\"\n                                    src={`/images/avatars/${user?.username}.jpg`}\n                                    // src={`/images/avatars/steve.jpg`}\n                                    alt={`${user?.username} profile`}\n                                    onError={(e) => {\n                                       e.target.src = DEFAULT_IMAGE_PATH;\n                                    }}\n                                 />\n                              </Link>\n                           </div>\n                        )}\n                     </>\n                  ) : (\n                     <>\n                        <Link to={ROUTES.LOGIN}>\n                           <button\n                              type=\"button\"\n                              className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\"\n                           >\n                              Log In\n                           </button>\n                        </Link>\n                        <Link to={ROUTES.SIGN_UP}>\n                           <button\n                              type=\"button\"\n                              className=\"font-bold text-sm rounded text-blue-medium w-20 h-8\"\n                           >\n                              Sign Up\n                           </button>\n                        </Link>\n                     </>\n                  )}\n               </div>\n            </div>\n         </div>\n      </header>\n   );\n}\n","export const DEFAULT_IMAGE_PATH = '/images/avatars/default.png';\n","import { useState, useEffect } from 'react';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function useUser(userId) {\n   const [activeUser, setActiveUser] = useState();\n\n   useEffect(() => {\n      async function getUserObjByUserId(userId) {\n         const [user] = await getUserByUserId(userId);\n         setActiveUser(user || {});\n      }\n\n      if (userId) {\n         getUserObjByUserId(userId);\n      }\n   }, [userId]);\n\n   return { user: activeUser, setActiveUser };\n}\n","import { createContext } from 'react';\n\nconst LoggedInUserContext = createContext(null);\nexport default LoggedInUserContext;\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function Header({ username }) {\n  return (\n    <div className=\"flex border-b border-gray-primary h-4 p-4 py-8\">\n      <div className=\"flex items-center\">\n        <Link to={`/p/${username}`} className=\"flex items-center\">\n          <img\n            className=\"rounded-full h-8 w-8 flex mr-3\"\n            src={`/images/avatars/${username}.jpg`}\n            alt={`${username} profile picture`}\n          />\n          <p className=\"font-bold\">{username}</p>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  username: PropTypes.string.isRequired\n};\n","import PropTypes from 'prop-types';\n\nexport default function Image({ src, caption }) {\n  return <img src={src} alt={caption} />;\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  caption: PropTypes.string.isRequired\n};\n","import { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport FirebaseContext from '../../context/firebase';\nimport UserContext from '../../context/user';\n\nexport default function Actions({ docId, totalLikes, likedPhoto, handleFocus }) {\n   const {\n      user: { uid: userId }\n   } = useContext(UserContext);\n\n\n   const [toggleLiked, setToggleLiked] = useState(likedPhoto);//likedPhoto is boolean(false set to be default)\n   const [likes, setLikes] = useState(totalLikes);\n   const { firebase, FieldValue } = useContext(FirebaseContext);\n\n   //console.log(toggleLiked)\n\n   const handleToggleLiked = async () => {\n      setToggleLiked((toggleLiked) => !toggleLiked);\n      //setToggleLiked(!toggleLiked);// same\n\n      await firebase\n         .firestore()\n         .collection('photos')\n         .doc(docId)\n         .update({\n            likes: toggleLiked ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId)\n         });\n\n      setLikes((likes) => (toggleLiked ? likes - 1 : likes + 1));\n   };\n\n   return (\n      <>\n         <div className=\"flex justify-between p-4\">\n            <div className=\"flex\">\n\n               <svg\n                  onClick={handleToggleLiked}\n                  onKeyDown={(event) => {\n                     if (event.key === 'Enter') {\n                        handleToggleLiked();\n                     }\n                  }}\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  tabIndex={0}\n                  className={`w-8 mr-4 select-none cursor-pointer focus:outline-none ${toggleLiked ? 'fill-red text-red-primary' : 'text-black-light'\n                     }`}\n               >\n                  <path\n                     strokeLinecap=\"round\"\n                     strokeLinejoin=\"round\"\n                     strokeWidth={2}\n                     d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                  />\n               </svg>\n               <svg\n                  onClick={handleFocus}\n                  onKeyDown={(event) => {\n                     if (event.key === 'Enter') {\n                        handleFocus();\n                     }\n                  }}\n                  className=\"w-8 text-black-light select-none cursor-pointer focus:outline-none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  tabIndex={0}\n               >\n                  <path\n                     strokeLinecap=\"round\"\n                     strokeLinejoin=\"round\"\n                     strokeWidth={2}\n                     d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                  />\n               </svg>\n            </div>\n         </div>\n         <div className=\"p-4 py-0\">\n            <p className=\"font-bold\">{likes === 1 ? `${likes} like` : `${likes} likes`}</p>\n         </div>\n      </>\n   );\n}\n\nActions.propTypes = {\n   docId: PropTypes.string.isRequired,\n   totalLikes: PropTypes.number.isRequired,\n   likedPhoto: PropTypes.bool.isRequired,\n   handleFocus: PropTypes.func.isRequired\n};\n","import PropTypes from 'prop-types';\n\nexport default function Footer({ caption, username }) {\n  return (\n    <div className=\"p-4 pt-2 pb-1\">\n      <span className=\"mr-1 font-bold\">{username}</span>\n      <span className=\"italic\">{caption}</span>\n    </div>\n  );\n}\n\nFooter.propTypes = {\n  caption: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired\n};\n","import { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport FirebaseContext from '../../context/firebase';\nimport UserContext from '../../context/user';\n\nexport default function AddComment({ docId, comments, setComments, commentInput }) {\n\n   const [comment, setComment] = useState('');\n   const { firebase, FieldValue } = useContext(FirebaseContext);\n   const {\n      user: { displayName }\n   } = useContext(UserContext);\n\n   const handleSubmitComment = (event) => {\n      event.preventDefault();\n      //spread the comments combined with comment created here and dispalName catched from UserContext\n      setComments([...comments, { displayName, comment }]);\n      setComment('');\n\n      return firebase\n         .firestore()\n         .collection('photos')\n         .doc(docId)\n         .update({\n            comments: FieldValue.arrayUnion({ displayName, comment })\n         });\n   };\n\n   return (\n      <div className=\"border-t border-gray-primary\">\n         <form\n            className=\"flex justify-between pl-0 pr-5\"\n            method=\"POST\"\n            onSubmit={(event) =>\n               comment.length >= 1 ? handleSubmitComment(event) : event.preventDefault()\n            }\n         >\n            <input\n               aria-label=\"Add a comment\"\n               autoComplete=\"off\"\n               className=\"text-sm text-gray-base w-full mr-3 py-5 px-4\"\n               type=\"text\"\n               name=\"add-comment\"\n               placeholder=\"Add a comment...\"\n               value={comment}\n               onChange={({ target }) => setComment(target.value)}\n               ref={commentInput}\n            />\n            <button\n               className={`text-sm font-bold text-blue-medium ${!comment && 'opacity-25'}`}\n               type=\"button\"\n               disabled={comment.length < 1}\n               onClick={handleSubmitComment}\n            >\n               Post\n            </button>\n         </form>\n      </div>\n   );\n}\n\nAddComment.propTypes = {\n   docId: PropTypes.string.isRequired,\n   comments: PropTypes.array.isRequired,\n   setComments: PropTypes.func.isRequired,\n   commentInput: PropTypes.object\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDistance, getHours } from 'date-fns';\nimport { Link } from 'react-router-dom';\nimport AddComment from './add-comment';\n\n\n\nexport default function Comments({ docId, comments: allComments, posted, commentInput }) {\n   const [comments, setComments] = useState(allComments);\n   const [commentsSlice, setCommentsSlice] = useState(3);\n\n\n   //console.log(posted)\n\n   const showNextComments = () => {\n      setCommentsSlice(commentsSlice + 3);\n   };\n\n\n\n   return (\n      <>\n         <div className=\"p-4 pt-1 pb-4\">\n            {comments.slice(0, commentsSlice).map((item) => (\n               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n                  <Link to={`/p/${item.displayName}`}>\n                     <span className=\"mr-1 font-bold\">{item.displayName} </span>\n                  </Link>\n                  <span> {item.comment}\n                     {/* <span className=\"text-gray-base uppercase text-xs mt-2 pl-3\">\n                        {formatDistance(posted, new Date())} ago\n                     </span> */}\n                  </span>\n               </p>\n            ))}\n            {comments.length >= 3 && commentsSlice < comments.length && (\n               <button\n                  className=\"text-sm text-gray-base mb-1 cursor-pointer focus:outline-none\"\n                  type=\"button\"\n                  onClick={showNextComments}\n                  onKeyDown={(event) => {\n                     if (event.key === 'Enter') {\n                        showNextComments();\n                     }\n                  }}\n               >\n                  View more comments\n               </button>\n            )}\n            <p className=\"text-gray-base uppercase text-xs mt-2\">\n               {formatDistance(posted, new Date())} ago\n\n            </p>\n         </div>\n         <AddComment\n            docId={docId}\n            comments={comments}\n            setComments={setComments}// we will work from addComments \n            commentInput={commentInput}\n         />\n      </>\n   );\n}\n\nComments.propTypes = {\n   docId: PropTypes.string.isRequired,\n   comments: PropTypes.array.isRequired,\n   posted: PropTypes.number.isRequired,\n   commentInput: PropTypes.object.isRequired\n};\n","import { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './header';\nimport Image from './image';\nimport Actions from './actions';\nimport Footer from './footer';\nimport Comments from './comments';\n\nexport default function Post({ content }) {\n   const commentInput = useRef(null);\n   const handleFocus = () => commentInput.current.focus();//funstion on click to send us down in the comments input field. ref is named commentInput in Comments component as prop which is sent \n\n\n   //console.log(content)\n   // components\n   // -> header, image, actions (like & comment icons), footer, comments\n   return (\n      <div className=\"rounded col-span-4 border bg-white border-gray-primary mb-12\">\n         <Header username={content.username} />\n         <Image src={content.imageSrc} caption={content.caption} />\n         <Actions\n            docId={content.docId}\n            totalLikes={content.likes.length}\n            likedPhoto={content.userLikedPhoto}// we have this new prop created in firebase in function getPhotos\n            handleFocus={handleFocus} //on click to send us down in the comments input field\n         />\n         <Footer caption={content.caption} username={content.username} />\n         <Comments\n            docId={content.docId}\n            comments={content.comments}\n            posted={content.dateCreated}\n            commentInput={commentInput}\n         />\n      </div>\n   );\n}\n\nPost.propTypes = {\n   content: PropTypes.shape({\n      username: PropTypes.string.isRequired,\n      imageSrc: PropTypes.string.isRequired,\n      caption: PropTypes.string.isRequired,\n      docId: PropTypes.string.isRequired,\n      userLikedPhoto: PropTypes.bool.isRequired,\n      likes: PropTypes.array.isRequired,\n      comments: PropTypes.array.isRequired,\n      dateCreated: PropTypes.number.isRequired\n   })\n};\n","/* eslint-disable no-nested-ternary */\nimport { useContext } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport LoggedInUserContext from '../context/logged-in-user';\nimport usePhotos from '../hooks/use-photos';\nimport Post from './post';\n\nexport default function Timeline() {\n\n   const { user } = useContext(LoggedInUserContext);\n\n   //directly destructure to get following from user\n   const { user: { following } = {} } = useContext(\n      LoggedInUserContext\n   );\n\n\n\n   const { photos } = usePhotos(user);\n\n\n   return (\n      <div className=\"container col-span-2\">\n         {following === undefined ? (\n            <Skeleton count={2} width={640} height={500} className=\"mb-5\" />\n         ) : following.length === 0 ? (\n            <p className=\"flex justify-center font-bold\">Follow other people to see Photos</p>\n         ) : photos ? (\n            photos.map((content) => <Post key={content.docId} content={content} />)\n         ) : null}\n\n\n      </div>\n   );\n}\n\n","import { useState, useEffect } from 'react';\nimport { getPhotos } from '../services/firebase';\n\nexport default function usePhotos(user) {\n  const [photos, setPhotos] = useState(null);\n\n  useEffect(() => {\n    async function getTimelinePhotos() {\n      // does the user actually follow people?\n      if (user?.following?.length > 0) {\n        const followedUserPhotos = await getPhotos(user.userId, user.following);\n        // re-arrange array to be newest photos first by dateCreated\n        followedUserPhotos.sort((a, b) => b.dateCreated - a.dateCreated);\n        setPhotos(followedUserPhotos);\n      }\n    }\n\n    getTimelinePhotos();\n  }, [user?.userId, user?.following]);\n\n  return { photos };\n}\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Skeleton from 'react-loading-skeleton';\nimport { DEFAULT_IMAGE_PATH } from '../../constants/paths';\n\nexport default function User({ username, fullName }) {\n   return !username || !fullName ? (\n      <Skeleton count={1} height={61} />\n   ) : (\n      <Link to={`/p/${username}`} className=\"grid grid-cols-4 gap-4 mb-6 items-center\">\n         <div className=\"flex items-center justify-between col-span-1\">\n            <img\n               className=\"rounded-full w-16 flex mr-3\"\n               src={`/images/avatars/${username}.jpg`}\n               alt=\"\"\n               onError={(e) => {\n                  e.target.src = DEFAULT_IMAGE_PATH;\n               }}\n            />\n         </div>\n         <div className=\"col-span-3\">\n            <p className=\"font-bold text\">{username}</p>\n            <p className=\"text-sm\">{fullName}</p>\n         </div>\n      </Link>\n   );\n}\n\nUser.propTypes = {\n   username: PropTypes.string,\n   fullName: PropTypes.string\n};\n","import { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n   updateLoggedInUserFollowing,\n   updateFollowedUserFollowers,\n   getUserByUserId\n} from '../../services/firebase';\nimport LoggedInUserContext from '../../context/logged-in-user';\n\nexport default function SuggestedProfile({\n   profileDocId,\n   username,\n   profileId,\n   userId,\n   loggedInUserDocId\n}) {\n\n\n\n   const [followed, setFollowed] = useState(false);\n   const { setActiveUser } = useContext(LoggedInUserContext);\n\n   async function handleFollowUser() {\n      setFollowed(true);\n      await updateLoggedInUserFollowing(loggedInUserDocId, profileId, false);\n      await updateFollowedUserFollowers(profileDocId, userId, false);\n      const [user] = await getUserByUserId(userId);\n      setActiveUser(user);\n   }\n\n   return !followed ? (\n      <div className=\"flex flex-row items-center align-items justify-between\">\n         <div className=\"flex items-center justify-between\">\n            <img\n               className=\"rounded-full w-8 flex mr-3\"\n               src={`/images/avatars/${username}.jpg`}\n               alt=\"\"\n               onError={(e) => {\n                  e.target.src = `/images/avatars/default.png`;\n               }}\n            />\n            <Link to={`/p/${username}`}>\n               <p className=\"font-bold text-sm\">{username}</p>\n            </Link>\n         </div>\n         <button\n            className=\"text-xs font-bold text-blue-medium\"\n            type=\"button\"\n            onClick={handleFollowUser}\n         >\n            Follow\n         </button>\n      </div>\n   ) : null;\n}\n\nSuggestedProfile.propTypes = {\n   profileDocId: PropTypes.string.isRequired,\n   username: PropTypes.string.isRequired,\n   profileId: PropTypes.string.isRequired,\n   userId: PropTypes.string.isRequired,\n   loggedInUserDocId: PropTypes.string.isRequired\n};\n","/* eslint-disable no-nested-ternary */\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from 'react-loading-skeleton';\nimport { getSuggestedProfiles } from '../../services/firebase';\nimport SuggestedProfile from './suggested-profile';\n\nexport default function Suggestions({ userId, following, loggedInUserDocId }) {\n   const [profiles, setProfiles] = useState(null);\n\n\n   // console.log(userId)\n   useEffect(() => {\n      async function suggestedProfiles() {\n         //parameters: to not show our profile and to see which are we following and not to be shown those\n         const response = await getSuggestedProfiles(userId, following);\n         setProfiles(response);\n      }\n\n      if (userId) {\n         suggestedProfiles();\n      }\n   }, [userId]);\n   // hint: use the firebase service (call using userId)\n   // getSuggestedProfiles\n   // call the async function ^^^^ within useEffect\n   // store it in state\n   // go ahead and render (wait on the profiles as in 'skeleton')\n\n   return !profiles ? (\n      <Skeleton count={1} height={150} className=\"mt-5\" />\n   ) : profiles.length > 0 ? (\n      <div className=\"rounded flex flex-col\">\n         <div className=\"text-sm flex items-center align-items justify-between mb-2\">\n            <p className=\"font-bold text-gray-base\">Suggestions for you</p>\n         </div>\n         <div className=\"mt-4 grid gap-5\">\n            {profiles.map((profile) => (\n               <SuggestedProfile\n                  key={profile.docId}\n                  profileDocId={profile.docId}\n                  username={profile.username}\n                  profileId={profile.userId}\n                  userId={userId}\n                  loggedInUserDocId={loggedInUserDocId}\n               />\n            ))}\n         </div>\n      </div>\n   ) : null;\n}\n\nSuggestions.propTypes = {\n   userId: PropTypes.string,\n   following: PropTypes.array,\n   loggedInUserDocId: PropTypes.string\n};\n","import { useContext } from 'react';\nimport User from './user';\nimport Suggestions from './suggestions';\nimport LoggedInUserContext from '../../context/logged-in-user';\n\nexport default function Sidebar() {\n   const { user: { docId = '', fullName, username, userId, following } = {} } = useContext(LoggedInUserContext);\n\n\n   return (\n      <div className=\"p-4\">\n         <User username={username} fullName={fullName} />\n         <Suggestions userId={userId} following={following} loggedInUserDocId={docId} />\n      </div>\n   );\n}\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/header';\nimport Timeline from '../components/timeline';\nimport Sidebar from '../components/sidebar';\nimport useUser from '../hooks/use-user';\nimport LoggedInUserContext from '../context/logged-in-user';\n\nexport default function Dashboard({ user: loggedInUser }) {\n\n   const { user, setActiveUser } = useUser(loggedInUser.uid);\n\n\n\n   useEffect(() => {\n      document.title = 'Reactgram';\n   }, []);\n\n   return (\n      <LoggedInUserContext.Provider value={{ user, setActiveUser }}>\n         <div className=\"bg-gray-background\">\n            <Header />\n            <div className=\"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg\">\n               <Timeline />\n               <Sidebar />\n            </div>\n         </div>\n      </LoggedInUserContext.Provider>\n   );\n}\n\nDashboard.propTypes = {\n   user: PropTypes.object.isRequired\n};\n","import { firebase, FieldValue } from '../lib/firebase';\n\nexport async function doesUsernameExist(username) {\n   const result = await firebase\n      .firestore()\n      .collection('users')\n      .where('username', '==', username.toLowerCase())\n      .get();\n\n   return result.docs.length > 0;\n}\n\nexport async function getUserByUsername(username) {\n   const result = await firebase\n      .firestore()\n      .collection('users')\n      .where('username', '==', username.toLowerCase())\n      .get();\n\n   return result.docs.map((item) => ({\n      ...item.data(),\n      docId: item.id\n   }));\n}\n\n// get user from the firestore where userId === userId (passed from the auth)\nexport async function getUserByUserId(userId) {\n   const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n   const user = result.docs.map((item) => ({\n      ...item.data(),\n      docId: item.id\n   }));\n\n   return user;\n}\n\n// check all conditions before limit results\nexport async function getSuggestedProfiles(userId, following) {\n   let query = firebase.firestore().collection('users');\n\n   if (following.length > 0) {\n      query = query.where('userId', 'not-in', [...following, userId]);\n   } else {\n      query = query.where('userId', '!=', userId);\n   }\n   const result = await query.limit(10).get();\n\n   const profiles = result.docs.map((user) => ({\n      ...user.data(), //only data for not followed user(doesn't contain the id of the doc in Firestore)\n      docId: user.id // with this we add the docId plus in the profile data\n   }));\n   //console.log(profiles)\n   return profiles;\n}\n\nexport async function updateLoggedInUserFollowing(\n   loggedInUserDocId, // currently logged in user document id (karl's profile)\n   profileId, // the user that karl requests to follow\n   isFollowingProfile // true/false (am i currently following this person?)\n) {\n   return firebase\n      .firestore()\n      .collection('users')\n      .doc(loggedInUserDocId)\n      .update({\n         following: isFollowingProfile ?\n            FieldValue.arrayRemove(profileId) :\n            FieldValue.arrayUnion(profileId)\n      });\n}\n\nexport async function updateFollowedUserFollowers(\n   profileDocId, // currently logged in user document id (karl's profile)\n   loggedInUserDocId, // the user that karl requests to follow\n   isFollowingProfile // true/false (am i currently following this person?)\n) {\n   return firebase\n      .firestore()\n      .collection('users')\n      .doc(profileDocId)\n      .update({\n         followers: isFollowingProfile ?\n            FieldValue.arrayRemove(loggedInUserDocId) :\n            FieldValue.arrayUnion(loggedInUserDocId)\n      });\n}\n\nexport async function getPhotos(userId, following) {\n   // [5,4,2] => following\n   const result = await firebase\n      .firestore()\n      .collection('photos')\n      .where('userId', 'in', following)\n      .get();\n\n   const userFollowedPhotos = result.docs.map((photo) => ({\n      ...photo.data(),\n      docId: photo.id\n   }));\n\n   const photosWithUserDetails = await Promise.all(\n      userFollowedPhotos.map(async (photo) => {\n         let userLikedPhoto = false; // we create new prop here \n         if (photo.likes.includes(userId)) {\n            userLikedPhoto = true;\n         }\n\n         // photo.userId = 2 //we catch the username from user cause photo doesn't have username field\n         const user = await getUserByUserId(photo.userId);\n\n         // raphael\n         const { username } = user[0];\n         return { username, ...photo, userLikedPhoto };//we return 3 data together(we spread for combining them)\n      })\n\n   );\n\n   return photosWithUserDetails;\n}\n\nexport async function getUserPhotosByUserId(userId) {\n   const result = await firebase\n      .firestore()\n      .collection('photos')\n      .where('userId', '==', userId)\n      .get();\n\n   const photos = result.docs.map((photo) => ({\n      ...photo.data(),\n      docId: photo.id\n   }));\n   return photos;\n}\n\nexport async function isUserFollowingProfile(loggedInUserUsername, profileUserId) {\n   const result = await firebase\n      .firestore()\n      .collection('users')\n      .where('username', '==', loggedInUserUsername) // karl (active logged in user)\n      .where('following', 'array-contains', profileUserId)\n      .get();\n\n   const [response = {}] = result.docs.map((item) => ({\n      ...item.data(),\n      docId: item.id\n   }));\n\n   return response.userId;\n}\n\nexport async function toggleFollow(\n   isFollowingProfile,\n   activeUserDocId,\n   profileDocId,\n   profileUserId,\n   followingUserId\n) {\n   // 1st param: karl's doc id\n   // 2nd param: raphael's user id\n   // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\n   await updateLoggedInUserFollowing(activeUserDocId, profileUserId, isFollowingProfile);\n\n   // 1st param: karl's user id\n   // 2nd param: raphael's doc id\n   // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\n   await updateFollowedUserFollowers(profileDocId, followingUserId, isFollowingProfile);\n}\n"],"names":["Header","loggedInUser","useContext","UserContext","user","useUser","uid","firebase","FirebaseContext","history","useHistory","className","to","ROUTES","src","alt","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","type","title","onClick","auth","signOut","push","onKeyDown","event","key","username","onError","e","target","DEFAULT_IMAGE_PATH","userId","useState","activeUser","setActiveUser","useEffect","getUserByUserId","getUserObjByUserId","createContext","Image","caption","Actions","docId","totalLikes","likedPhoto","handleFocus","toggleLiked","setToggleLiked","likes","setLikes","FieldValue","handleToggleLiked","firestore","collection","doc","update","arrayRemove","arrayUnion","tabIndex","Footer","AddComment","comments","setComments","commentInput","comment","setComment","displayName","handleSubmitComment","preventDefault","method","onSubmit","length","autoComplete","name","placeholder","value","onChange","ref","disabled","Comments","allComments","posted","commentsSlice","setCommentsSlice","showNextComments","slice","map","item","formatDistance","Date","Post","content","useRef","imageSrc","userLikedPhoto","current","focus","dateCreated","Timeline","LoggedInUserContext","following","photos","setPhotos","getPhotos","followedUserPhotos","sort","a","b","getTimelinePhotos","usePhotos","undefined","count","width","height","User","fullName","SuggestedProfile","profileDocId","profileId","loggedInUserDocId","followed","setFollowed","updateLoggedInUserFollowing","updateFollowedUserFollowers","Suggestions","profiles","setProfiles","getSuggestedProfiles","response","suggestedProfiles","profile","Sidebar","Dashboard","document","doesUsernameExist","where","toLowerCase","get","result","docs","getUserByUsername","data","id","query","limit","isFollowingProfile","followers","userFollowedPhotos","photo","Promise","all","includes","photosWithUserDetails","getUserPhotosByUserId","isUserFollowingProfile","loggedInUserUsername","profileUserId","toggleFollow","activeUserDocId","followingUserId"],"sourceRoot":""}