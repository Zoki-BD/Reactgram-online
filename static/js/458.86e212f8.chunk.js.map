{"version":3,"file":"static/js/458.86e212f8.chunk.js","mappings":"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","sources":["pages/sign-up.js","services/firebase.js","../javascript/esm|C:/Users/zoran.kostovski/Desktop/reactgram-tailwindcss/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../javascript/esm|C:/Users/zoran.kostovski/Desktop/reactgram-tailwindcss/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../javascript/esm|C:/Users/zoran.kostovski/Desktop/reactgram-tailwindcss/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../javascript/esm|C:/Users/zoran.kostovski/Desktop/reactgram-tailwindcss/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { useState, useContext, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport FirebaseContext from '../context/firebase';\nimport * as ROUTES from '../constants/routes';\nimport { doesUsernameExist } from '../services/firebase';\n\nexport default function SignUp() {\n   const history = useHistory();\n   const { firebase } = useContext(FirebaseContext);\n\n   const [username, setUsername] = useState('');\n   const [fullName, setFullName] = useState('');\n   const [emailAddress, setEmailAddress] = useState('');\n   const [password, setPassword] = useState('');\n\n   const [error, setError] = useState('');\n   const isInvalid = password === '' || emailAddress === '';\n\n   const handleSignUp = async (event) => {\n      event.preventDefault();\n\n      const usernameExists = await doesUsernameExist(username);\n      if (!usernameExists) {\n\n         try {\n            const createdUserResult = await firebase\n               .auth()\n               .createUserWithEmailAndPassword(emailAddress, password);\n\n            // authentication\n            // -> emailAddress & password & username (displayName)\n            await createdUserResult.user.updateProfile({\n               displayName: username\n            });\n            console.log(username)\n            // firebase user collection (create a document)\n            await firebase\n               .firestore()\n               .collection('users')\n               .add({\n                  userId: createdUserResult.user.uid,\n                  username: username.toLowerCase(),\n                  fullName,\n                  emailAddress: emailAddress.toLowerCase(),\n                  following: ['2'],\n                  followers: [],\n                  dateCreated: Date.now()\n               });\n\n            history.push(ROUTES.DASHBOARD);\n         } catch (error) {\n            setFullName('');\n            setEmailAddress('');\n            setPassword('');\n            setError(error.message);\n         }\n      } else {\n         setUsername('');\n         setError('That username is already taken, please try another.');\n      }\n   };\n\n   useEffect(() => {\n      document.title = 'Sign Up - Reactgram';\n   }, []);\n\n   return (\n      <div className=\"container flex mx-auto max-w-screen-md items-center h-screen\">\n         <div className=\"flex w-3/5\">\n            <img src=\"/images/iphone-with-profile.jpg\" alt=\"iPhone with Instagram app\" />\n         </div>\n         <div className=\"flex flex-col w-2/5\">\n            <div className=\"flex flex-col items-center bg-white p-4 border border-gray-primary mb-4 rounded\">\n               <h1 className=\"flex justify-center w-full\">\n                  <img src=\"/images/logo.png\" alt=\"Instagram\" className=\"mt-2 w-6/12 mb-4\" />\n               </h1>\n\n               {error && <p className=\"mb-4 text-xs text-red-primary\">{error}</p>}\n\n               <form onSubmit={handleSignUp} method=\"POST\">\n                  <input\n                     aria-label=\"Enter your username\"\n                     type=\"text\"\n                     placeholder=\"Username\"\n                     className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 border border-gray-primary rounded mb-2\"\n                     onChange={({ target }) => setUsername(target.value)}\n                     value={username}\n                  />\n                  <input\n                     aria-label=\"Enter your full name\"\n                     type=\"text\"\n                     placeholder=\"Full name\"\n                     className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 border border-gray-primary rounded mb-2\"\n                     onChange={({ target }) => setFullName(target.value)}\n                     value={fullName}\n                  />\n                  <input\n                     aria-label=\"Enter your email address\"\n                     type=\"text\"\n                     placeholder=\"Email address\"\n                     className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 border border-gray-primary rounded mb-2\"\n                     onChange={({ target }) => setEmailAddress(target.value)}\n                     value={emailAddress}\n                  />\n                  <input\n                     aria-label=\"Enter your password\"\n                     type=\"password\"\n                     placeholder=\"Password\"\n                     className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 border border-gray-primary rounded mb-2\"\n                     onChange={({ target }) => setPassword(target.value)}\n                     value={password}\n                  />\n                  <button\n                     disabled={isInvalid}\n                     type=\"submit\"\n                     className={`bg-blue-medium text-white w-full rounded h-8 font-bold\n            ${isInvalid && 'opacity-50'}`}\n                  >\n                     Sign Up\n                  </button>\n               </form>\n            </div>\n            <div className=\"flex justify-center items-center flex-col w-full bg-white p-4 rounded border border-gray-primary\">\n               <p className=\"text-sm\">\n                  Have an account?{` `}\n                  <Link to={ROUTES.LOGIN} className=\"font-bold text-blue-medium\">\n                     Login\n                  </Link>\n               </p>\n            </div>\n         </div>\n      </div>\n   );\n}\n","import { firebase, FieldValue } from '../lib/firebase';\n\nexport async function doesUsernameExist(username) {\n   const result = await firebase\n      .firestore()\n      .collection('users')\n      .where('username', '==', username.toLowerCase())\n      .get();\n\n   return result.docs.length > 0;\n}\n\nexport async function getUserByUsername(username) {\n   const result = await firebase\n      .firestore()\n      .collection('users')\n      .where('username', '==', username.toLowerCase())\n      .get();\n\n   return result.docs.map((item) => ({\n      ...item.data(),\n      docId: item.id\n   }));\n}\n\n// get user from the firestore where userId === userId (passed from the auth)\nexport async function getUserByUserId(userId) {\n   const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n   const user = result.docs.map((item) => ({\n      ...item.data(),\n      docId: item.id\n   }));\n\n   return user;\n}\n\n// check all conditions before limit results\nexport async function getSuggestedProfiles(userId, following) {\n   let query = firebase.firestore().collection('users');\n\n   if (following.length > 0) {\n      query = query.where('userId', 'not-in', [...following, userId]);\n   } else {\n      query = query.where('userId', '!=', userId);\n   }\n   const result = await query.limit(10).get();\n\n   const profiles = result.docs.map((user) => ({\n      ...user.data(), //only data for not followed user(doesn't contain the id of the doc in Firestore)\n      docId: user.id // with this we add the docId plus in the profile data\n   }));\n   //console.log(profiles)\n   return profiles;\n}\n\nexport async function updateLoggedInUserFollowing(\n   loggedInUserDocId, // currently logged in user document id (karl's profile)\n   profileId, // the user that karl requests to follow\n   isFollowingProfile // true/false (am i currently following this person?)\n) {\n   return firebase\n      .firestore()\n      .collection('users')\n      .doc(loggedInUserDocId)\n      .update({\n         following: isFollowingProfile ?\n            FieldValue.arrayRemove(profileId) :\n            FieldValue.arrayUnion(profileId)\n      });\n}\n\nexport async function updateFollowedUserFollowers(\n   profileDocId, // currently logged in user document id (karl's profile)\n   loggedInUserDocId, // the user that karl requests to follow\n   isFollowingProfile // true/false (am i currently following this person?)\n) {\n   return firebase\n      .firestore()\n      .collection('users')\n      .doc(profileDocId)\n      .update({\n         followers: isFollowingProfile ?\n            FieldValue.arrayRemove(loggedInUserDocId) :\n            FieldValue.arrayUnion(loggedInUserDocId)\n      });\n}\n\nexport async function getPhotos(userId, following) {\n   // [5,4,2] => following\n   const result = await firebase\n      .firestore()\n      .collection('photos')\n      .where('userId', 'in', following)\n      .get();\n\n   const userFollowedPhotos = result.docs.map((photo) => ({\n      ...photo.data(),\n      docId: photo.id\n   }));\n\n   const photosWithUserDetails = await Promise.all(\n      userFollowedPhotos.map(async (photo) => {\n         let userLikedPhoto = false; // we create new prop here \n         if (photo.likes.includes(userId)) {\n            userLikedPhoto = true;\n         }\n\n         // photo.userId = 2 //we catch the username from user cause photo doesn't have username field\n         const user = await getUserByUserId(photo.userId);\n\n         // raphael\n         const { username } = user[0];\n         return { username, ...photo, userLikedPhoto };//we return 3 data together(we spread for combining them)\n      })\n\n   );\n\n   return photosWithUserDetails;\n}\n\nexport async function getUserPhotosByUserId(userId) {\n   const result = await firebase\n      .firestore()\n      .collection('photos')\n      .where('userId', '==', userId)\n      .get();\n\n   const photos = result.docs.map((photo) => ({\n      ...photo.data(),\n      docId: photo.id\n   }));\n   return photos;\n}\n\nexport async function isUserFollowingProfile(loggedInUserUsername, profileUserId) {\n   const result = await firebase\n      .firestore()\n      .collection('users')\n      .where('username', '==', loggedInUserUsername) // karl (active logged in user)\n      .where('following', 'array-contains', profileUserId)\n      .get();\n\n   const [response = {}] = result.docs.map((item) => ({\n      ...item.data(),\n      docId: item.id\n   }));\n\n   return response.userId;\n}\n\nexport async function toggleFollow(\n   isFollowingProfile,\n   activeUserDocId,\n   profileDocId,\n   profileUserId,\n   followingUserId\n) {\n   // 1st param: karl's doc id\n   // 2nd param: raphael's user id\n   // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\n   await updateLoggedInUserFollowing(activeUserDocId, profileUserId, isFollowingProfile);\n\n   // 1st param: karl's user id\n   // 2nd param: raphael's doc id\n   // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\n   await updateFollowedUserFollowers(profileDocId, followingUserId, isFollowingProfile);\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["SignUp","history","useHistory","firebase","useContext","FirebaseContext","useState","username","setUsername","fullName","setFullName","emailAddress","setEmailAddress","password","setPassword","error","setError","isInvalid","handleSignUp","event","preventDefault","doesUsernameExist","auth","createUserWithEmailAndPassword","createdUserResult","user","updateProfile","displayName","console","log","firestore","collection","add","userId","uid","toLowerCase","following","followers","dateCreated","Date","now","push","ROUTES","message","useEffect","document","title","className","src","alt","onSubmit","method","type","placeholder","onChange","target","value","disabled","to","where","get","result","docs","length","getUserByUsername","map","item","data","docId","id","getUserByUserId","getSuggestedProfiles","query","limit","profiles","updateLoggedInUserFollowing","loggedInUserDocId","profileId","isFollowingProfile","doc","update","FieldValue","updateFollowedUserFollowers","profileDocId","getPhotos","userFollowedPhotos","photo","Promise","all","userLikedPhoto","likes","includes","photosWithUserDetails","getUserPhotosByUserId","photos","isUserFollowingProfile","loggedInUserUsername","profileUserId","response","toggleFollow","activeUserDocId","followingUserId","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}